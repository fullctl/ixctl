# Generated by Django 2.2.16 on 2020-11-09 15:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_handleref.models
import django_inet.models
import django_ixctl.models.ixctl
import fullctl.django.inet.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_fullctl', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InternetExchange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('pdb_id', models.PositiveIntegerField(blank=True, null=True)),
                ('pdb_version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('urlkey', models.CharField(default=django_ixctl.models.ixctl.generate_secret, max_length=255, unique=True)),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ix_set', to='django_fullctl.Instance')),
            ],
            options={
                'verbose_name': 'Internet Exchange',
                'verbose_name_plural': 'Internet Exchanges',
                'db_table': 'ixctl_ix',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Routeserver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('name', models.CharField(help_text='Routeserver name', max_length=255)),
                ('asn', django_inet.models.ASNField(help_text='ASN')),
                ('router_id', django_inet.models.IPAddressField(help_text='Router Id', max_length=39)),
                ('rpki_bgp_origin_validation', models.BooleanField(default=False)),
                ('ars_type', models.CharField(choices=[('bird', 'Bird'), ('bird2', 'Bird 2'), ('openbgpd', 'OpenBGPD')], default='bird', max_length=32)),
                ('max_as_path_length', models.IntegerField(default=32, help_text='Max length of AS_PATH attribute.')),
                ('no_export_action', models.CharField(choices=[('pass', 'Pass (Treat as transitive)'), ('strip', 'Strip (Treat as non-transitive)')], default='pass', help_text='RFC1997 well-known communities (NO_EXPORT and NO_ADVERTISE)', max_length=8)),
                ('graceful_shutdown', models.BooleanField(default=False, help_text='Graceful BGP session shutdown')),
                ('extra_config', models.TextField(blank=True, help_text='Extra arouteserver config', null=True)),
                ('ix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rs_set', to='django_ixctl.InternetExchange')),
            ],
            options={
                'db_table': 'ixctl_rs',
                'unique_together': {('ix', 'router_id')},
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RouteserverConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('generated', models.DateTimeField(auto_now=True, help_text='Time of generation')),
                ('body', models.TextField(help_text='Config content')),
                ('ars_general', models.TextField(blank=True, help_text='ARouteserver general config', null=True)),
                ('ars_clients', models.TextField(blank=True, help_text='ARouteserver clients config', null=True)),
                ('rs', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_ixctl.Routeserver')),
            ],
            options={
                'db_table': 'ixctl_rsconf',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PermissionRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('type', models.CharField(choices=[('net_ix', 'Manage network at exchange')], max_length=255)),
                ('extra', models.TextField(blank=True, null=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permreq_set', to='django_fullctl.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permreq_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Permission Request',
                'verbose_name_plural': 'Permission Requests',
                'db_table': 'ixctl_permreq',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('pdb_id', models.PositiveIntegerField(blank=True, null=True)),
                ('pdb_version', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('asn', models.IntegerField()),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='net_set', to='django_fullctl.Instance')),
            ],
            options={
                'verbose_name': 'Network',
                'verbose_name_plural': 'Networks',
                'db_table': 'ixctl_net',
                'unique_together': {('instance', 'asn')},
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InternetExchangeMember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('ok', 'Ok'), ('pending', 'Pending'), ('deactivated', 'Deactivated'), ('failed', 'Failed'), ('expired', 'Expired')], default='ok', max_length=12)),
                ('pdb_id', models.PositiveIntegerField(blank=True, null=True)),
                ('pdb_version', models.PositiveIntegerField(blank=True, null=True)),
                ('ipaddr4', models.CharField(blank=True, max_length=255, null=True, validators=[fullctl.django.inet.validators.validate_ip4])),
                ('ipaddr6', models.CharField(blank=True, max_length=255, null=True, validators=[fullctl.django.inet.validators.validate_ip6])),
                ('macaddr', django_inet.models.MacAddressField(blank=True, max_length=17, null=True)),
                ('as_macro', models.CharField(blank=True, max_length=255, null=True, validators=[fullctl.django.inet.validators.validate_as_set])),
                ('is_rs_peer', models.BooleanField(default=False)),
                ('speed', models.PositiveIntegerField()),
                ('asn', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('ixf_state', models.CharField(default='active', max_length=255)),
                ('ixf_member_type', models.CharField(choices=[('peering', 'peering'), ('ixp', 'ixp'), ('routeserver', 'routeserver'), ('probono', 'probono')], default='peering', max_length=255)),
                ('ix', models.ForeignKey(help_text='Members at this Exchange', on_delete=django.db.models.deletion.CASCADE, related_name='member_set', to='django_ixctl.InternetExchange')),
            ],
            options={
                'verbose_name': 'Internet Exchange Member',
                'verbose_name_plural': 'Internet Exchange Members',
                'db_table': 'ixctl_member',
                'unique_together': {('macaddr', 'ix'), ('ipaddr4', 'ix'), ('ipaddr6', 'ix')},
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
    ]
